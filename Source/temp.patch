diff --git a/Source/ScreenDotMatrix.c b/Source/ScreenDotMatrix.c
index 672c25a..bd4df9e 100644
--- a/Source/ScreenDotMatrix.c
+++ b/Source/ScreenDotMatrix.c
@@ -40,37 +40,31 @@ void ScreenDotMatrix_Clear(void){
 	memset(SCREEN_DOT_MATRIX_BUFFER, 0x00, sizeof(SCREEN_DOT_MATRIX_BUFFER));
 }
 
-void ScreenDotMatrix_Draw(	  char * img, int width_pixel, int height_pixel, 
-							int x_pixel, int y_pixel){
+void ScreenDotMatrix_Draw(	 char * img, int width_pixels, int height_pixels, 
+							int x_pixels, int y_pixels){
 
-	int w_bytes = width_pixel / 8;
+	int w_bytes = width_pixels / 8;
 	char * address;
 	char img_data;	
-	int x_offset = x_pixel % 8;
-	int w_offset = width_pixel % 8;
+	int x_offset = x_pixels % 8;
+	int w_offset = width_pixels % 8;
 	
 	char low_data, high_data;
 	char low_mask, high_mask;	
 	int h_index, w_index, k;	
 	
-	if(height_pixel + y_pixel < 0 || y_pixel >= SCREEN_DOT_MATRIX_HEIGHT)
-		return;
-	
-	if(width_pixel + x_pixel < 0 || x_pixel  >= SCREEN_DOT_MATRIX_WIDTH)
-		return;
-		
-	for (h_index = y_pixel, k = 0; h_index < height_pixel; h_index ++, k++){
+	for (h_index = y_pixels, k = 0; h_index < height_pixels; h_index ++, k++){
 		
 		if( h_index >= SCREEN_DOT_MATRIX_HEIGHT || h_index < 0 )
 			continue;		
 		
 		for (w_index = 0; w_index < (w_offset ? w_bytes + 1: w_bytes); w_index++){		
 			
-			if((x_pixel + w_index * 8 ) >= (SCREEN_DOT_MATRIX_WIDTH * 8) ||
-			   (x_pixel + w_index * 8 ) < 0 )
+			if((x_pixels + w_index * 8 ) >= (SCREEN_DOT_MATRIX_WIDTH * 8) ||
+			   (x_pixels + w_index * 8 ) < 0 )
 				continue;
 			
-			address = ScreenDotMatrix_GetByteAddressByPosition((x_pixel + w_index * 8 ), h_index);
+			address = ScreenDotMatrix_GetByteAddressByPosition((x_pixels + w_index * 8 ), h_index);
 			
 			img_data = img [w_bytes * k + w_index] ;
 			
@@ -81,7 +75,7 @@ void ScreenDotMatrix_Draw(	  char * img, int width_pixel, int height_pixel,
 				high_mask = 0xFF << (8-x_offset);
 				*address = ( *address & high_mask) | (low_data & low_mask);
 								
-				if((x_pixel + w_index * 8  + 8) < (SCREEN_DOT_MATRIX_WIDTH * 8) )
+				if((x_pixels + w_index * 8  + 8) < (SCREEN_DOT_MATRIX_WIDTH * 8) )
 					*(address + 1) |= (*(address + 1) & low_mask) | (high_data & high_mask);		
 			} else {
 				
@@ -91,38 +85,8 @@ void ScreenDotMatrix_Draw(	  char * img, int width_pixel, int height_pixel,
 	}		
 }
 
-char * ScreenDotMatrix_GetByteAddressByPosition(int x_pixel, int y_pixel){
+char * ScreenDotMatrix_GetByteAddressByPosition(int x_pixels, int y_pixels){
 	
-	int x_bytes = x_pixel/8;		
-	return SCREEN_DOT_MATRIX_BUFFER + x_bytes + y_pixel * SCREEN_DOT_MATRIX_WIDTH;
-}
-
-void ScreenDotMatrix_DrawText(char * text, int x_pixel, int y_pixel, char  * font, int font_width, 
-							  int font_height){
-	int index = 0;
-	char current_char;
-	int current_x_pixel = x_pixel;
-								  
-	while(text[index] != '\0'){
-		
-		current_char = text[index] - 65;
-		
-		if(current_char < 0 || current_char >= (90 -65) ){
-			++index;
-			continue;
-		}
-		
-		if(current_x_pixel >= SCREEN_DOT_MATRIX_WIDTH * 8)
-			break;
-		
-		if(current_x_pixel + font_width >= 0 ){
-			
-			ScreenDotMatrix_Draw(font, font_width, font_height, current_x_pixel, y_pixel);
-		}
-		
-		current_x_pixel += font_width;
-		++index;	
-	}
+	int x_bytes = x_pixels/8;		
+	return SCREEN_DOT_MATRIX_BUFFER + x_bytes + y_pixels * SCREEN_DOT_MATRIX_WIDTH;
 }
-
-
diff --git a/Source/ScreenDotMatrix.h b/Source/ScreenDotMatrix.h
index 2e4adfc..9b6b4ad 100644
--- a/Source/ScreenDotMatrix.h
+++ b/Source/ScreenDotMatrix.h
@@ -25,10 +25,7 @@ void ScreenDotMatrix_Setup(void);
 void ScreenDotMatrix_Render(void);
 void ScreenDotMatrix_Clear(void);
 
-void ScreenDotMatrix_Draw( 	char  * img, int width_pixel, int height_pixel, int x_pixel, int y_pixel);
-char * ScreenDotMatrix_GetByteAddressByPosition(int x_pixel, int y_pixel);
-
-void ScreenDotMatrix_DrawText(char * text, int x_pixel, int y_pixel, char  * font, int font_width, 
-							  int font_height);
+void ScreenDotMatrix_Draw( 	char * img, int width_pixels, int height_pixels, int x_pixels, int y_pixels);
+char * ScreenDotMatrix_GetByteAddressByPosition(int x_pixels, int y_pixels);
 
 #endif /* __SCREEN_DOT_MATRIX_H__ */
diff --git a/atmega8535/DivisasScreenDisplay.c b/atmega8535/DivisasScreenDisplay.c
index 9e72a92..5948fec 100644
--- a/atmega8535/DivisasScreenDisplay.c
+++ b/atmega8535/DivisasScreenDisplay.c
@@ -14,27 +14,41 @@
 /*#include "TPIC6B595.h"
 #include "SN54LS145N.h"
 #include "Timer.h"*/
-#include "DotMatrix.h"
+//#include "DotMatrix.h"
+#include "ScreenDotMatrix.h"
+
+  char FONT_7x6 [] = {
+	
+	
+	0b1111100,
+	0b1100110,
+	0b1100110,
+	0b1111100,
+	0b1100110,	
+	0b1100110,
+	0b1111100
+	
+};
 
 TIMER_STRUCT myTimer;
-DOT_MATRIX_STRUCT dotMatrixControl;
+/*DOT_MATRIX_STRUCT dotMatrixControl;
 
 #define DEMO_WIDTH 					(3)
 #define DEMO_HEIGHT 				(7)
 
-char DEMO_DOT_MATRIX_BUFFER[DEMO_WIDTH * DEMO_HEIGHT];
+char DEMO_DOT_MATRIX_BUFFER[DEMO_WIDTH * DEMO_HEIGHT];*/
 //**********************************************************************
 // API Fucntions
 //**********************************************************************
 
-int n_pow(int number, int count) {
+/*int n_pow(int number, int count) {
 	int result = 1;
 	
 	while(count-- > 0)
 		result *=number;  
 
 	return result;
-}
+}*/
 void main(void)
 {   
 	int index;
@@ -46,24 +60,32 @@ void main(void)
 	bsp_pin_mode(BSP_PIN_A2, OUTPUT);	
 	bsp_pin_mode(BSP_PIN_A3, OUTPUT);
 	
-	DotMatrix_Setup(&dotMatrixControl, 
+	/*DotMatrix_Setup(&dotMatrixControl, 
 					DEMO_DOT_MATRIX_BUFFER, 
 					DEMO_WIDTH, 
-					DEMO_HEIGHT);
+					DEMO_HEIGHT);*/
+	ScreenDotMatrix_Setup();
 	
 	//! AFTER SETUP	
-	//AddTimer(&myTimer, 1000);	
-	for(index = 0; index < DEMO_HEIGHT; index++)
-		memset(DEMO_DOT_MATRIX_BUFFER + (DEMO_WIDTH * index), n_pow(2,index), DEMO_WIDTH );
+	AddTimer(&myTimer, 100);	
+	/*for(index = 0; index < DEMO_HEIGHT; index++)
+		memset(DEMO_DOT_MATRIX_BUFFER + (DEMO_WIDTH * index), n_pow(2,index), DEMO_WIDTH );*/
+	
 	//! LOOP
 	while(TRUE){			
 		
-		DotMatrix_Update(&dotMatrixControl);
+		ScreenDotMatrix_Render();
+		//DotMatrix_Update(&dotMatrixControl);
 		
-		/*if(Timer_GetOverflow(&myTimer) == TRUE){				
+		if(Timer_GetOverflow(&myTimer) == TRUE){				
 			
-			bsp_io_toggle(BSP_PIN_A2);			
+			ScreenDotMatrix_Clear();
+			ScreenDotMatrix_Draw(FONT_7x6,8,7,index,0);
+			index --;
+			if(index < 0)
+				index = 24;
+			//bsp_io_toggle(BSP_PIN_A2);			
 			Timer_Reset(&myTimer);
-		}*/
+		}
 	}
 }
diff --git a/atmega8535/DivisasScreenDisplay.prj b/atmega8535/DivisasScreenDisplay.prj
index c4d1b6c..905f4d9 100644
--- a/atmega8535/DivisasScreenDisplay.prj
+++ b/atmega8535/DivisasScreenDisplay.prj
@@ -5,7 +5,7 @@ CV=2.05.3 Standard
 A=Grupo Elektra SA de CV
 C=DSI Grupo Salinas
 D=28/11/2014 01:28:17 p.m.
-Files=7
+Files=8
 OpenedFiles=1
 OF1=bsp.c
 Active1=1
@@ -30,8 +30,9 @@ F4=..\Source\Timer.c
 F5=..\Source\TPIC6B595.c
 F6=..\Source\SN54LS145N.c
 F7=..\Source\DotMatrix.c
+F8=..\Source\ScreenDotMatrix.c
 [Compiler]
-RebuildAll=1
+RebuildAll=0
 LinkageInformationPresent=1
 Chip=ATmega8535
 CPUClock=8000000
@@ -123,7 +124,7 @@ WarningExternalDeclaredNeverDefined=1
 WarningUnknownPragma=1
 DebugBootLoader=0
 WatchAVR8LAutoVariables=0
-Build=83
+Build=116
 UseEEPROMLocation0=1
 ExternalInterruptVectors=0
 IncludePath0=E:\development\DivisasDisplay\CodeVisionAVR\Source
@@ -278,12 +279,13 @@ UserProgPath=
 UserProgCmdLine=
 UserProgWorkDir=
 [BookmarksFoldedCode]
-Files=5
+Files=6
 F1=bsp.c
 F2=bsp.h
 F3=..\Source\SN54LS145N.c
 F4=..\Source\TPIC6B595.c
 F5=DivisasScreenDisplay.c
+F6=..\Source\DotMatrix.c
 [Bookmarks1]
 TimeStamp=1165792170
 Row=105
@@ -380,8 +382,26 @@ ScrollPosY=0
 TimeStamp=1165794365
 [FoldedCode1]
 Blocks=0
+[Bookmarks6]
+TimeStamp=1166171076
+Row=5
+Column=89
+ScrollPosX=0
+ScrollPosY=0
+BK0=-1
+BK1=-1
+BK2=-1
+BK3=-1
+BK4=-1
+BK5=-1
+BK6=-1
+BK7=-1
+BK8=-1
+BK9=-1
+[FoldedCode6]
+Blocks=0
 [HeadersList]
-Files=7
+Files=8
 F1=E:\development\DivisasDisplay\CodeVisionAVR\atmega8535\DivisasScreenDisplay.c
 F2=E:\development\DivisasDisplay\CodeVisionAVR\atmega8535\psp.c
 F3=E:\development\DivisasDisplay\CodeVisionAVR\atmega8535\bsp.c
@@ -389,6 +409,7 @@ F4=E:\development\DivisasDisplay\CodeVisionAVR\Source\Timer.c
 F5=E:\development\DivisasDisplay\CodeVisionAVR\Source\TPIC6B595.c
 F6=E:\development\DivisasDisplay\CodeVisionAVR\Source\SN54LS145N.c
 F7=E:\development\DivisasDisplay\CodeVisionAVR\Source\DotMatrix.c
+F8=E:\development\DivisasDisplay\CodeVisionAVR\Source\ScreenDotMatrix.c
 [Header1]
 Files=15
 F1=..\Source\CommonSystemLibraries.h
@@ -401,11 +422,11 @@ F7=E:\cvavr2\inc\mega8535_bits.h
 F8=bsp.h
 F9=E:\cvavr2\inc\SPI.h
 F10=E:\cvavr2\inc\delay.h
-F11=..\Source\DotMatrix.h
-F12=..\Source\TPIC6B595.h
-F13=..\Source\SN54LS145N.h
-F14=..\Source\Timer.h
-F15=..\Source\Dotmatrix_FONT_7X5.h
+F11=..\Source\ScreenDotMatrix.h
+F12=..\Source\DotMatrix.h
+F13=..\Source\TPIC6B595.h
+F14=..\Source\SN54LS145N.h
+F15=..\Source\Timer.h
 [Header2]
 Files=3
 F1=psp.h
@@ -458,7 +479,7 @@ F9=bsp.h
 F10=E:\cvavr2\inc\SPI.h
 F11=E:\cvavr2\inc\delay.h
 [Header7]
-Files=15
+Files=14
 F1=..\Source\DotMatrix.h
 F2=..\Source\TPIC6B595.h
 F3=..\Source\CommonSystemLibraries.h
@@ -473,4 +494,20 @@ F11=E:\cvavr2\inc\SPI.h
 F12=E:\cvavr2\inc\delay.h
 F13=..\Source\SN54LS145N.h
 F14=..\Source\Timer.h
-F15=..\Source\Dotmatrix_FONT_7X5.h
+[Header8]
+Files=15
+F1=..\Source\ScreenDotMatrix.h
+F2=..\Source\DotMatrix.h
+F3=..\Source\TPIC6B595.h
+F4=..\Source\CommonSystemLibraries.h
+F5=E:\cvavr2\inc\stdio.h
+F6=E:\cvavr2\inc\stdarg.h
+F7=E:\cvavr2\inc\string.h
+F8=psp.h
+F9=E:\cvavr2\inc\mega8535.h
+F10=E:\cvavr2\inc\mega8535_bits.h
+F11=bsp.h
+F12=E:\cvavr2\inc\SPI.h
+F13=E:\cvavr2\inc\delay.h
+F14=..\Source\SN54LS145N.h
+F15=..\Source\Timer.h
